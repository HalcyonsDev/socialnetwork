version: '1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis:alpine
    container_name: redis
    hostname: redis
    ports:
      - '6379:6379'
    environment:
      REDIS_PORT: 6379
      REDIS_PASSWORD: password
    command: [ "redis-server", "--requirepass", "password" ]

  postgres-media:
    image: postgres:16.4
    container_name: postgres-media
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: media_service

  postgres-user:
    image: postgres:16.4
    container_name: postgres-user
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_service

  postgres-chat:
    image: postgres:16.4
    container_name: postgres-user
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: chat_service

  eureka-server:
    image: halcyons/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"

  api-gateway:
    image: halcyons/api-gateway:latest
    container_name: api-gateway
    env_file: "api-gateway/.env"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "9191:9191"
    depends_on:
      - eureka-server

  user-service:
    image: halcyons/user-service:latest
    container_name: user-service
    env_file: "user-service/.env"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - zookeeper
      - postgres-user
      - eureka-server
      - api-gateway

  media-service:
    image: halcyons/media-service:latest
    container_name: media-service
    env_file: "media-service/.env"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8084:8084"
    depends_on:
      - kafka
      - zookeeper
      - postgres-media
      - eureka-server
      - api-gateway

  auth-service:
    image: halcyons/auth-service:latest
    container_name: auth-service
    env_file: "auth-service/.env"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8082:8082"
    depends_on:
      - kafka
      - zookeeper
      - eureka-server
      - api-gateway

  notification-service:
    image: halcyons/notification-service:latest
    container_name: notification-service
    env_file: "notification-service/.env"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - zookeeper
      - eureka-server
      - api-gateway

  chat-service:
    image: halcyons/chat-service:latest
    container_name: chat-service
    env_file: "chat-service/.env"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8085:8085"
    depends_on:
      - kafka
      - zookeeper
      - eureka-server
      - api-gateway